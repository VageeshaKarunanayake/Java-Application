package UI;


import static com.sun.org.apache.bcel.internal.util.SecuritySupport.getResourceAsStream;
import dashboard.authorize;
import dashboard.sql_connect;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import model.dbConnection;
import org.sqlite.SQLiteConfig;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Bimsara Gimhan
 */
public class ResetPassword extends javax.swing.JFrame {
    
    Connection con = null;
    ResultSet rs  = null;

    /**
     * Creates new form ResetPassword
     */
    public ResetPassword() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    public boolean resetPassword(String username , String password ,String answer){
        try{
            con = sql_connect.connectDB();
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM users WHERE username = ?");
            stmt.setString(1, username);
            ResultSet rs = stmt.executeQuery();
            
            String db_answer = rs.getString(5);
            if(db_answer.equals(answer))
            {
                System.out.println("sec answer matched");
                stmt.close();
                PreparedStatement stmt2 = con.prepareStatement("UPDATE users SET password = ? WHERE username = ?");
                stmt2.setString(1, password);
                stmt2.setString(2, username);
                if(stmt2.executeUpdate() == 1)
                {
                    System.out.println("password updated");
                    return true;
                }
                else
                {
                    System.out.println("password update failed");
                    return false;
                }
            }
            else
            {
                System.out.println("wrong sec password");
                return false;
            }
           
           
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
            System.out.println(ex.getMessage());
            return false;
        }
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_answer = new javax.swing.JTextField();
        cmb_securityQ = new javax.swing.JComboBox();
        txt_username = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_reEnterP = new javax.swing.JPasswordField();
        txt_password = new javax.swing.JPasswordField();
        btn_done = new javax.swing.JButton();
        backbtn2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1100, 960));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(52, 74, 95));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resourses/icons8-privacy-48.png"))); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel2.setText("Forgot password?");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setText("Security Question :");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel5.setText("Answer :");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, -1, 50));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel6.setText("New Password :");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setText("Re Enter Password :");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, -1, -1));

        txt_answer.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txt_answer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_answerActionPerformed(evt);
            }
        });
        jPanel2.add(txt_answer, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 300, 260, 40));

        cmb_securityQ.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmb_securityQ.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Name of first pet", "Name of primary school", "Favourite book" }));
        jPanel2.add(cmb_securityQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, 260, 40));

        txt_username.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txt_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_usernameActionPerformed(evt);
            }
        });
        jPanel2.add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 260, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setText("User Name :");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        txt_reEnterP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel2.add(txt_reEnterP, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 410, 260, 40));

        txt_password.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel2.add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 260, 40));

        btn_done.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reportnResearch_Icons/button_done (1).png"))); // NOI18N
        btn_done.setBorder(null);
        btn_done.setBorderPainted(false);
        btn_done.setContentAreaFilled(false);
        btn_done.setFocusPainted(false);
        btn_done.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/reportnResearch_Icons/button_done.png"))); // NOI18N
        btn_done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_doneActionPerformed(evt);
            }
        });
        jPanel2.add(btn_done, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 550, -1, -1));

        backbtn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/button_back.png"))); // NOI18N
        backbtn2.setBorder(null);
        backbtn2.setBorderPainted(false);
        backbtn2.setContentAreaFilled(false);
        backbtn2.setFocusPainted(false);
        backbtn2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/button_back (1).png"))); // NOI18N
        backbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtn2ActionPerformed(evt);
            }
        });
        jPanel2.add(backbtn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 550, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 830, 680));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 960, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_answerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_answerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_answerActionPerformed

    private void txt_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_usernameActionPerformed
        //validation
    }//GEN-LAST:event_txt_usernameActionPerformed

    private void btn_doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_doneActionPerformed
        
        String as = txt_answer.getText();
        String up = txt_password.getText();
        String re = txt_reEnterP.getText();
        String un = txt_username.getText();
        
        if(un.equals("")){
            JDialog dialog = new JDialog();
            dialog.setAlwaysOnTop(true);    
            JOptionPane.showMessageDialog(dialog, "Username cannot be Empty");
        }else if(as.equals("")){
            //JOptionPane.showMessageDialog(null, "Answer cannot be Empty");
            JDialog dialog = new JDialog();
            dialog.setAlwaysOnTop(true);    
            JOptionPane.showMessageDialog(dialog, "Answer cannot be Empty");
        }else if(up.equals("")){
            JDialog dialog = new JDialog();
            dialog.setAlwaysOnTop(true);    
            JOptionPane.showMessageDialog(dialog, "Password cannot be Empty");
        }else if(re.equals("")){
            JDialog dialog = new JDialog();
            dialog.setAlwaysOnTop(true);    
            JOptionPane.showMessageDialog(dialog, "Confirm Password cannot be Empty");
        }else{
            if(up.equals(re)){
                resetPassword(txt_username.getText() , txt_password.getText(), txt_answer.getText());
                
                LogInnew r = new LogInnew();
                r.setVisible(true);
                r.setSize(1100,960);
                r.setLocationRelativeTo(null);
                
                try {
                   r.setIconImage(ImageIO.read(getResourceAsStream("Images/frameIcon.png")));
                } catch (IOException ex) {
                    Logger.getLogger(LogInnew.class.getName()).log(Level.SEVERE, null, ex);
                }
                dispose();
            }else{
                JDialog dialog = new JDialog();
                dialog.setAlwaysOnTop(true);    
                JOptionPane.showMessageDialog(dialog, "Password and Confirm Password must be the same");
            }
        }
    }//GEN-LAST:event_btn_doneActionPerformed

    private void backbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtn2ActionPerformed
        LogInnew r = new LogInnew();
                r.setVisible(true);
                r.setSize(1100,960);
                r.setLocationRelativeTo(null);
                
                try {
                   r.setIconImage(ImageIO.read(getResourceAsStream("Images/frameIcon.png")));
                } catch (IOException ex) {
                    Logger.getLogger(LogInnew.class.getName()).log(Level.SEVERE, null, ex);
                }
        dispose();
    }//GEN-LAST:event_backbtn2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ResetPassword rpa = new ResetPassword();
                rpa.setSize(1100,960);
                rpa.setVisible(true);
                
                
                try {
                   rpa.setIconImage(ImageIO.read(getResourceAsStream("Images/frameIcon.png")));
                } catch (IOException ex) {
                    Logger.getLogger(ResetPassword.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbtn2;
    private javax.swing.JButton btn_done;
    private javax.swing.JComboBox cmb_securityQ;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txt_answer;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JPasswordField txt_reEnterP;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
